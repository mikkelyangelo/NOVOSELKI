import streamlit as st
import pandas as pd
import os
from PIL import Image

# –ü—É—Ç—å –∫ CSV-—Ñ–∞–π–ª—É
CSV_FILE = 'wishlist.csv'
images_dir = 'images'

if not os.path.exists(images_dir):
    os.makedirs(images_dir)

def init_csv():
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è CSV-—Ñ–∞–π–ª–∞, –µ—Å–ª–∏ –æ–Ω –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if not os.path.exists(CSV_FILE):
        df = pd.DataFrame(columns=['item', 'checked', 'link', 'image'])
        df.to_csv(CSV_FILE, index=False)

def load_wishlist():
    try:
        wishlist_df = pd.read_csv(CSV_FILE)
        return wishlist_df
    except Exception as e:
        st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –≤–∏—à–ª–∏—Å—Ç–∞: {e}")
        return pd.DataFrame(columns=['item', 'checked', 'link', 'image'])  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç–æ–π DataFrame

def save_wishlist(wishlist_df):
    try:
        wishlist_df.to_csv(CSV_FILE, index=False)  # –°–æ—Ö—Ä–∞–Ω—è–µ–º DataFrame –≤ CSV
    except Exception as e:
        st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –≤–∏—à–ª–∏—Å—Ç–∞: {e}")

def update_wishlist(wishlist_df):
    indices_to_delete = []
    for index, row in wishlist_df.iterrows():
        item_label = str(row['item']) if pd.notna(row['item']) else "Unnamed Item"
        st.markdown(f"### {item_label}")
        checked = st.checkbox('–ü–æ–¥–∞—Ä—é —ç—Ç–æ', value=row['checked'], key=f'checkbox_{index}')
        del_check = st.checkbox('–í—ã–±—Ä–∞—Ç—å –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è', value=False, key=f'del_{index}')
        wishlist_df.at[index, 'checked'] = checked  # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —á–µ–∫–±–æ–∫—Å–∞

        # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –µ—Å–ª–∏ –æ–Ω–æ –µ—Å—Ç—å
        if pd.notna(row['image']) and row['image']:
            img = Image.open(row['image'])
            st.image(img,  width=200)

        if pd.notna(row['link']) and row['link']:
            st.markdown(f"[–°—Å—ã–ª–∫–∞ –Ω–∞ –ø–æ–¥–∞—Ä–æ–∫]({row['link']})")
        st.markdown("---")

        if del_check:
            indices_to_delete.append(index)

    if st.button("‚ùå –£–¥–∞–ª–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–µ"):
        if indices_to_delete:
            wishlist_df = wishlist_df.drop(indices_to_delete).reset_index(drop=True)  # –£–¥–∞–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –∏ –æ–±–Ω–æ–≤–ª—è–µ–º –∏–Ω–¥–µ–∫—Å—ã
            save_wishlist(wishlist_df)  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
            st.success("–í—ã–±—Ä–∞–Ω–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã —É–¥–∞–ª–µ–Ω—ã –∏–∑ –≤–∏—à–ª–∏—Å—Ç–∞!")
        else:
            st.warning("–í—ã–±–µ—Ä–∏—Ç–µ —ç–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è.")

    return wishlist_df

st.title("üõçÔ∏è –í–∏—à–ª–∏—Å—Ç")

init_csv()

if 'wishlist_df' not in st.session_state:
    st.session_state.wishlist_df = load_wishlist()

with st.sidebar:
    st.header("–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç")
    new_item = st.text_input("–ù–∞–∑–≤–∞–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞:")
    new_link = st.text_input("–°—Å—ã–ª–∫–∞ –Ω–∞ —ç–ª–µ–º–µ–Ω—Ç:")
    new_image = st.file_uploader("–ó–∞–≥—Ä—É–∑–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)", type=['jpg', 'jpeg', 'png'])

    if st.button("‚ûï –î–æ–±–∞–≤–∏—Ç—å"):
        if new_item:
            image_path = None
            if new_image is not None:
                image_path = os.path.join(images_dir, new_image.name)
                img = Image.open(new_image)
                img.save(image_path)

            new_row = pd.DataFrame({'item': [new_item], 'checked': [False], 'link': [new_link], 'image': [image_path]})
            st.session_state.wishlist_df = pd.concat([st.session_state.wishlist_df, new_row], ignore_index=True)
            save_wishlist(st.session_state.wishlist_df)
            st.success(f"'{new_item}' –¥–æ–±–∞–≤–ª–µ–Ω –≤ –≤–∏—à–ª–∏—Å—Ç!")
        else:
            st.warning("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞.")

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤–∏—à–ª–∏—Å—Ç–∞
st.session_state.wishlist_df = update_wishlist(st.session_state.wishlist_df)

# –ö–Ω–æ–ø–∫–∞ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è
if st.button("üíæ –û–±–Ω–æ–≤–∏—Ç—å"):
    save_wishlist(st.session_state.wishlist_df)
    st.success("–°–æ—Å—Ç–æ—è–Ω–∏–µ –≤–∏—à–ª–∏—Å—Ç–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ!")

# –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ –≤–∏—à–ª–∏—Å—Ç–∞
st.header("–û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –≤–∏—à–ª–∏—Å—Ç:")
st.dataframe(st.session_state.wishlist_df)
